UP_NIB		EQU 31h
LOW_NIB		EQU 32h

CL_100		EQU 33h

P1_SEC		EQU 34h
P1_MIN		EQU 35h
P1_L_SEC	EQU 36h
P1_L_MIN	EQU 37h
P2_SEC		EQU 38h
P2_MIN		EQU 39h
P2_L_SEC	EQU 40h
P2_L_MIN	EQU 41h
P1_MOVES	EQU 42h
P2_MOVES	EQU 43h

TH_INIT		EQU 0E8h
TL_INIT		EQU 0h

BUTTONS		EQU P0
LCD_DATA	EQU P1
LCD_RS		EQU P2.0
LCD_RW		EQU P2.1
LCD_EN		EQU P2.2

BSEG		AT 0h
BUTTON_SIG:	DBIT 0
CSEG		AT 0h

ORG 000h
	JMP	MAIN
ORG 000Bh
	JMP	T0_ISR

MAIN:
	MOV 	P1_SEC,	#0
	MOV 	P1_MIN,	#10
	MOV 	P1_L_SEC, #0
	MOV 	P1_L_MIN, #0
	MOV 	P2_SEC,	#0
	MOV 	P2_MIN,	#10
	MOV 	P2_L_SEC, #0
	MOV 	P2_L_MIN, #0
	MOV 	P1_MOVES, #0
	MOV 	P1_MOVES, #0
	MOV	R0, #0
	CLR 	BUTTON_SIG
	ACALL	LCD_INIT
	ACALL	T0_INIT
	ACALL	PRINT_CHESS_CLOCK

LOOP:
	CJNE	R0, #1, LOOP
	MOV	A, CL_100
	JNZ	LOOP
	MOV 	A, #01H
	ACALL	LCD_WR_CTRL
	ACALL	PRINT_CHESS_CLOCK
	ACALL	CHECK_P1_TIME
	ACALL	CHECK_P2_TIME
	SJMP	LOOP

;------------------------------------------------
; LCD CONTROL
;------------------------------------------------

INS_BREAKER:
	MOV	UP_NIB, A
	ANL	UP_NIB, #11110000b
	SWAP	A
	ANL	A, #11110000b
	MOV	LOW_NIB, A
	RET

INS_ASSEMBLER:
	ACALL	LCD_EN_PULSE_RD
	ANL	A, #11110000b
	MOV	UP_NIB, A
	ACALL	LCD_EN_PULSE_RD
	ANL	A, #11110000b
	SWAP	A
	MOV	LOW_NIB, A
	MOV	A, (UP_NIB OR LOW_NIB)
	RET

LCD_EN_PULSE:
	SETB	LCD_EN
	MOV	R7, #20h
	DJNZ	R7, $
	CLR	LCD_EN
	RET

LCD_EN_PULSE_RD:
	SETB	LCD_EN
	MOV	A, LCD_DATA
	CLR	LCD_EN
	RET

LCD_WR_DATA:
	SETB	LCD_RS
	CLR	LCD_RW
	ACALL	INS_BREAKER
	MOV	LCD_DATA, UP_NIB
	ACALL	LCD_EN_PULSE
	MOV	LCD_DATA, LOW_NIB
	ACALL	LCD_EN_PULSE
	ACALL	LCD_WAIT
	RET

LCD_RD_DATA:
	SETB	LCD_RS
	SETB	LCD_RW
	ACALL	INS_ASSEMBLER
	RET

LCD_WR_CTRL:
	CLR	LCD_RS
	CLR	LCD_RS
	ACALL	INS_BREAKER
	MOV	LCD_DATA, UP_NIB
	ACALL	LCD_EN_PULSE
	MOV	LCD_DATA, LOW_NIB
	ACALL	LCD_EN_PULSE
	ACALL	LCD_WAIT
	ACALL	DELAY
	RET

LCD_RD_CTRL:
	CLR	LCD_RS
	SETB	LCD_RW
	ACALL	INS_ASSEMBLER
	ACALL	DELAY
	RET

LCD INIT:
	ACALL 	DELAY

	MOV 	LCD_DATA, #28h
	CLR	LCD_RW
	CLR	LCD_RS
	SETB	LCD_EN
	NOP
	CLR	LCD_EN

	ACALL	DELAY

	MOV	A, #28h
	ACALL	LCD_WR_CTRL

	ACALL	DELAY

	MOV	A, #00001100b
	ACALL	LCD_WR_CTRL
	MOV	A, #00000001b
	ACALL	LCD_WR_CTRL

	RET

LCD_WAIT:
	ACALL	LCD_RD_CTRL
	JB	ACC.7, LCD_WAIT
	RET

DELAY:
	MOV	R7, #0FFh
	DJNZ	R7, $
	RET

;------------------------------------------------
; TIMER
;------------------------------------------------

T0_INIT:
	CLR	TR0
	MOV	TMOD, #01h
	MOV	TH0, #TH_INIT
	MOV	TL0, #TL_INIT
	MOV	CL_100, #0h

	SETB	EA
	SETB	ET0
	SETB	PT0
	SETB	TR0
	RET

T0_ISR:
	ORL	TL0, #TL_INIT
	MOV	TH0, #TH_INIT

	PUSH	ACC

	ACALL	CHECK_BUTTONS

	MOV	A, CL_100
	ADD	A, #1h
	MOV	CL_100, A
	CJNE	A, #64h, T0_END
	MOV	CL_100, #0h

	CJNE	R1, #0, PLAYER2

PLAYER1:
	DEC	P1_SEC
	MOV	A, P1_SEC
	CJNE	A, #-1, P1_L
	DEC	P1_MIN
	MOV	P1_SEC, #59

P1_L:
	INC	P1_L_SEC
	MOV	A, P1_L_SEC
	CJNE	A, #60, T0_END
	INC	P1_L_MIN
	MOV	P1_L_SEC, #0
	JMP	T0_END

PLAYER2:
	DEC	P2_SEC
	MOV	A, P2_SEC
	CJNE	A, #-1, P2_L
	DEC	P2_MIN
	MOV	P2_SEC, #59

P2_L:
	INC	P2_L_SEC
	MOV	A, P2_L_SEC
	CJNE	A, #60, T0_END
	INC	P2_L_MIN
	MOV	P2_L_SEC, #0

TO_END:
	POP	ACC
	RETI

;------------------------------------------------
; CHESS CLOCK
;------------------------------------------------

PRINT_CHESS_CLOCK:
	MOV	A, #01000110b; F
	ACALL	LCD_WR_DATA
	MOV	A, #01010000b; P
	ACALL	LCD_WR_DATA
	MOV	A, P1_MIN
	LCALL	PRINT_NUMBER
	MOV	A, #00111010b; :
	ACALL	LCD_WR_DATA
	MOV	A, P1_SEC
	LCALL	PRINT_NUMBER
	MOV	A, #01001100b; L
	ACALL	LCD_WR_DATA
	MOV	A, P1_L_MIN
	LCALL	PRINT_NUMBER
	MOV	A, #00111010b; :
	ACALL	LCD_WR_DATA
	MOV	A, P1_L_SEC
	LCALL	PRINT_NUMBER
	MOV	A, #01001101b; M
	ACALL	LCD_WR_DATA
	MOV	A, P1_MOVES
	ACALL	PRINT_NUMBER

	MOV	A, #11000000b
	ACALL	LCD_WR_CTRL

	MOV	A, #01010011b; S
	ACALL	LCD_WR_DATA
	MOV	A, #01010000b; P
	ACALL	LCD_WR_DATA
	MOV	A, P2_MIN
	LCALL	PRINT_NUMBER
	MOV	A, #00111010b; :
	ACALL	LCD_WR_DATA
	MOV	A, P2_SEC
	LCALL	PRINT_NUMBER
	MOV	A, #01001100b; L
	ACALL	LCD_WR_DATA
	MOV	A, P2_L_MIN
	LCALL	PRINT_NUMBER
	MOV	A, #00111010b; :
	ACALL	LCD_WR_DATA
	MOV	A, P2_L_SEC
	LCALL	PRINT_NUMBER
	MOV	A, #01001101b; M
	ACALL	LCD_WR_DATA
	MOV	A, P2_MOVES
	ACALL	PRINT_NUMBER
	RET

PRINT_NUMBER:
	MOV	B, #10
	DIV	AB
	ORL	A, #00110000b
	ACALL	LCD_WR_DATA
	MOV	A, B
	ORL	A, #00110000b
	ACALL	LCD_WR_DATA
	RET

CHECK_P1_TIME:
	MOV	A, P1_MIN
	CJNE	A, #0, TIME_CHECK_END
	MOV	A, P1_SEC
	CJNE	A, #0, TIME_CHECK_END
	MOV	R0, #0
	RET

CHECK_P2_TIME:
	MOV	A, P2_MIN
	CJNE	A, #0, TIME_CHECK_END
	MOV	A, P2_SEC
	CJNE	A, #0, TIME_CHECK_END
	MOV	R0, #0

TIME_CHECK_END:
	RET

;------------------------------------------------
; BUTTONS
;------------------------------------------------

CHECK_BUTTONS:
	MOV	A, BUTTONS
	CPL	A
	JNZ	NO_SIG
	JB	BUTTON_SIG, NO_CHANGE

BUTTON_1:
	CJNE	A, #00000001b, BUTTON_2
	SETB	BUTTON_SIG
	CJNE	R1, #0, NO_CHANGE
	MOV	P2_L_SEC, #0
	MOV	P2_L_MIN, #0
	INC	P1_MOVES
	MOV	R1, #1
	RET

BUTTON_2: 
	CJNE	A, #00000010b, BUTTON_3
	SETB	BUTTON_SIG
	CJNE	R1, #1, NO_CHANGE
	MOV	P1_L_SEC, #0
	MOV	P1_L_MIN, #0
	INC	P2_MOVES
	MOV	R1, #0
	RET

BUTTON_3:
	CJNE	A, #00000100b, NO_CHANGE
	SETB	BUTTON_SIG
	MOV	R0, #1
	MOV	R1, #0
	MOV	P1_SEC, #1
	MOV	P1_MIN, #10
	MOV	P1_L_SEC, #-1
	MOV	P1_L_MIN, #0
	MOV	P2_SEC,	#0
	MOV	P2_MIN, #10
	MOV 	P2_L_SEC, #0
	MOV	P2_L_MIN, #0
	MOV	P1_MOVES, #0
	MOV	P2_MOVES, #0
	RET

NO_SIG:
	CLR BUTTON_SIG
	RET

NO_CHANGE:
	RET

END
